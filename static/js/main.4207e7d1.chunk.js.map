{"version":3,"sources":["components/sections/Nav.js","components/providers/TypingTextContext.js","components/sections/Main.js","App.js","index.js","components/images/Logo.svg"],"names":["Nav","href","src","Logo","alt","Component","TypingTextContext","createContext","TypingTextProvider","props","useState","content","typingText","setTypingText","Provider","value","children","Main","useContext","typedText","setTypedText","timer","setTimer","speed","setSpeed","correct","setCorrect","isPlaying","setIsPlaying","typeTextRef","useRef","playBtn","spans","document","querySelectorAll","text","useEffect","interval","setInterval","prevTimer","clearInterval","length","word","Math","round","current","disabled","innerText","className","split","map","i","key","ref","onChange","e","target","textTyped","forEach","textLetter","character","classList","remove","add","onClick","fetch","then","res","json","data","focus","play","span","App","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.4207e7d1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Logo from \"../images/Logo.svg\";\r\n\r\nexport class Nav extends Component {\r\n  render() {\r\n    return (\r\n      <nav>\r\n        <a href=\"#\">\r\n          <img src={Logo} alt=\"Logo\" />\r\n        </a>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;\r\n","import React, { useState, createContext } from \"react\";\r\n\r\nexport const TypingTextContext = createContext();\r\n\r\nexport const TypingTextProvider = (props) => {\r\n  const [typingText, setTypingText] = useState({\r\n    content: \"Press Play!!\",\r\n  });\r\n\r\n  return (\r\n    <TypingTextContext.Provider value={[typingText, setTypingText]}>\r\n      {props.children}\r\n    </TypingTextContext.Provider>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useContext, useRef } from \"react\";\r\n\r\nimport { TypingTextContext } from \"../providers/TypingTextContext\";\r\n\r\nexport default function Main() {\r\n  const [typingText, setTypingText] = useContext(TypingTextContext);\r\n  const [typedText, setTypedText] = useState(\"\");\r\n  const [timer, setTimer] = useState(0);\r\n  const [speed, setSpeed] = useState(\"\");\r\n  const [correct, setCorrect] = useState(false);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const typeTextRef = useRef(\"\");\r\n  const playBtn = useRef(\"\");\r\n\r\n  const spans = document.querySelectorAll(\".correct\");\r\n  const text = document.querySelectorAll(\".text\");\r\n\r\n  const play = () => {\r\n    fetch(\"https://api.quotable.io/random\")\r\n      .then((res) => res.json())\r\n      .then((data) => setTypingText({ content: data.content }));\r\n    setTimer(0);\r\n    typeTextRef.current.disabled = false;\r\n    typeTextRef.current.focus();\r\n    setIsPlaying((play) => !play);\r\n    setSpeed(\"\");\r\n    setTypedText(\"\");\r\n    playBtn.current.disabled = true;\r\n\r\n    [...spans].map((span) => span.classList.remove(\"correct\"));\r\n    [...spans].map((span) => span.classList.remove(\"incorrect\"));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setTimer((prevTimer) => prevTimer + 1);\r\n    }, 1000);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [isPlaying]);\r\n\r\n  useEffect(() => {\r\n    if (spans.length === text.length && isPlaying === true) {\r\n      setCorrect(true);\r\n    }\r\n  }, [typedText]);\r\n\r\n  const handleTextChange = (e) => {\r\n    if (isPlaying) {\r\n      setTypedText(e.target.value);\r\n      const textTyped = e.target.value.split(\"\");\r\n\r\n      text.forEach((textLetter, i) => {\r\n        const character = textTyped[i];\r\n        if (character == null) {\r\n          textLetter.classList.remove(\"correct\");\r\n          textLetter.classList.remove(\"incorrect\");\r\n        } else if (character == textLetter.innerText) {\r\n          textLetter.classList.add(\"correct\");\r\n          textLetter.classList.remove(\"incorrect\");\r\n        } else {\r\n          textLetter.classList.remove(\"correct\");\r\n          textLetter.classList.add(\"incorrect\");\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  if (correct) {\r\n    const word = spans.length / 4.7;\r\n    setCorrect(false);\r\n    setSpeed(Math.round((word / timer) * 60) + \" Words Per Minute\");\r\n    setIsPlaying(false);\r\n    playBtn.current.disabled = false;\r\n    playBtn.current.innerText = \"Play Again\";\r\n    typeTextRef.current.disabled = true;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"speed-section\">\r\n        {\" \"}\r\n        <h3 className={isPlaying ? \"\" : \"timer\"}>{timer}</h3>\r\n        <h3 className=\"speed\">{speed}</h3>\r\n      </div>\r\n\r\n      <div className=\"text-box quote-display\">\r\n        {\" \"}\r\n        {typingText.content.split(\"\").map((text, i) => (\r\n          <span key={i} className=\"text\">\r\n            {text}\r\n          </span>\r\n        ))}{\" \"}\r\n      </div>\r\n      <div className=\"type-box\">\r\n        <textarea\r\n          ref={typeTextRef}\r\n          value={typedText}\r\n          onChange={handleTextChange}\r\n        ></textarea>\r\n        <button onClick={play} ref={playBtn}>\r\n          Play\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport Nav from \"./components/sections/Nav\";\nimport Main from \"./components/sections/Main\";\nimport { TypingTextProvider } from \"./components/providers/TypingTextContext\";\n\nfunction App() {\n  return (\n    <TypingTextProvider>\n      <div className=\"container\">\n        <Nav />\n        <Main />\n      </div>\n    </TypingTextProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./components/css/main.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/Logo.cf908695.svg\";"],"sourceRoot":""}